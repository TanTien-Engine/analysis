import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for VAR_TYPE_ARRAY
import "logger.logger" for Logger
import "loggraph" for Node as lg_Node, Traceback

class Print is Node
{
	init() 
	{
		super.init()

		this.imports = [
			Pin(this, "items", VAR_TYPE_ARRAY)
		]

		this.layout()
	}

	on_pin_dirty(pin)
	{
		super.on_pin_dirty(pin)

		this.print_input_value()
	}

	print_input_value()
	{
		var v_items = Blueprint.calc_input_value(this, 0)
		if (!v_items) {
			return nil
		}

		for (var itr in v_items.value) 
		{
			var item = itr.value
			if (item is lg_Node) {
				var name = item.value.get_name()
				Logger.info("++ %(name)")
			} else if (item is Traceback) {
				item.print()
			}
		}
	}
}