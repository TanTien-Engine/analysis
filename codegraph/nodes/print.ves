import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "codegraph.variant" for VAR_TYPE_NODE
import "codegraph" for CodeGraph

class Print is Node
{
	init() 
	{
		super.init()

		this.imports = [
			Pin(this, "node", VAR_TYPE_NODE)
		]

		this.layout()
	}

	on_pin_dirty(pin)
	{
		super.on_pin_dirty(pin)

		this.print_input_value()
	}

	print_input_value()
	{
		var v_node = Blueprint.calc_input_value(this, 0)
		if (v_node) {
			CodeGraph.print(v_node.value)
		}
	}
}